spring:
  application:
    name: fluffytime
  # mysql 설정
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  # spring jpa 설정
  jpa:
    hibernate:
      ddl-auto: update
#    show-sql: true

    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
    #        enable_lazy_load_no_trans: true
    open-in-view: false

  mail:
    host: ${SMTP_HOST}
    port: ${SMTP_PORT}
    username: ${SMTP_USERNAME}
    password: ${SMTP_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  data:
    #  redis 설정
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      timeout: 5000
      #  mongo 설정
    mongodb:
      uri: ${MONGO_URI}

  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB

  #oauth2
  #registration
  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: naver
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: https://fluffytime.o-r.kr/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope:
              - name
              - email

          google:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: https://fluffytime.o-r.kr/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope:
              - email
              - profile
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

# spring security 로깅 설정
#logging:
#  level.org.springframework.security: TRACE


jwt:
  secretKey: ${JWT_SECRET_KEY}
  refreshKey: ${JWT_REFRESH_KEY}

aws:
  s3:
    bucket-name: ${AWS_BUCKET_NAME}
    region: ${AWS_REGION}
  credentials:
    access-key-id: ${AWS_ACCESS_KEY_ID}
    secret-access-key: ${AWS_SECRET_ACCESS_KEY}


